Входной слой (layers.Conv2D(32, (3, 3), activation='relu', input_shape=(32, 32, 3)) ) принимает входные данные в форме тензора размерности (32, 32, 3), где 3 соответствует количеству цветов в изображении. 
Следующий слой (layers.MaxPooling2D((2, 2)) ) уменьшает размерность тензора в два раза. 
Далее, два сверточных слоя (layers.Conv2D(64, (3, 3), activation='relu') ) с последующими слоями пулинга (layers.MaxPooling2D((2, 2)) ) уменьшают размерность тензора еще в два раза. 
Затем слой (layers.Flatten() ) преобразует тензор в одномерный массив. 
Два полносвязных слоя (layers.Dense(64, activation='relu') ) и (layers.Dense(10, activation='softmax') ) зависят от количества классов и используются для классификации изображений на 10 классов 1.
Для обучения модели был выбран оптимизатор adam, функция потерь (categorical_crossentropy) и метрика (accuracy 1). Модель обучалась в течение 10 эпох 1.
Для сравнения качества предсказания при обучении на 20 широких классах с предсказаниями при обучении на 100 узких классах, можно использовать метод predict для получения предсказаний на тестовых данных. 
Затем, используя таблицу, можно обобщить предсказания по узким меткам до метки их широкого класса. Для оценки качества предсказания можно использовать метрику accuracy.